__/\\\\\\\\\\\\\\\___/\\\\____________/\\\\___/\\\\\\\\\\\\\\\______/\\\\\\\\\\\___
 _\///////\\\/////___\/\\\\\\________/\\\\\\__\/\\\///////////_____/\\\/////////\\\_
  _______\/\\\________\/\\\//\\\____/\\\//\\\__\/\\\_______________\//\\\______\///__
   _______\/\\\________\/\\\\///\\\/\\\/_\/\\\__\/\\\\\\\\\\\________\////\\\_________
    _______\/\\\________\/\\\__\///\\\/___\/\\\__\/\\\///////____________\////\\\______
     _______\/\\\________\/\\\____\///_____\/\\\__\/\\\______________________\////\\\___
      _______\/\\\________\/\\\_____________\/\\\__\/\\\_______________/\\\______\//\\\__
       _______\/\\\________\/\\\_____________\/\\\__\/\\\______________\///\\\\\\\\\\\/___
        _______\///_________\///______________\///___\///_________________\///////////_____



Time Machine File System is a read-only virtual filesystem which helps you to
read your Apple's time machine backup.

This filesystem does not targets performances, it has been written for a friend who
has lost his macbook and wants to recover its data on Linux.

It's actually not perfect, feel free to report bugs or suggestions at
https://github.com/abique/tmfs/issues

Enjoy!


How to use it ?
~~~~~~~~~~~~~~~

First you have to mount your HFS partition, by doing something like:
mount /dev/sdXX /mnt/hfs-root

then do as root:

tmfs /mnt/hfs-root /mnt/tm-root -ouid=$(id -u my_user),gid=$(id -g my_user),allow_other

then as a normal user, go to the directory /mnt/tm-root/ and enjoy your data! :-)


Dependancies
~~~~~~~~~~~~

 - C++
 - cmake >= 2.8
 - boost >= 1.46.0
 - fuse


How to build and install it ?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=/usr/local ..
make
DESTDIR=install-test make install
# then if the installation looks ok to you in install-test/ do make install as root
su
make install


Internals
~~~~~~~~~

Time Machine structure :

${hfs_root}/Backups.backupdb/${comp_name}/${date}/${disk_name}/ <- snapshot root
${hfs_root}/Backups.backupdb/${comp_name}/${date}/${disk_name}/.../Folder => hardlink count = dir_id
${hfs_root}/.HFS+ Private Directory Data/dir_${dir_id}/ <- real folder

Our representation :

/${comp_name}/${date}/${disk_name}/${Real root}
